<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"          
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
       			   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
						   http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
<!--  
  Root 공통빈
  DB관련 작업 (드라이버 로딩 , 템플릿 객체)
  view 작업 (공통 UI) (internalResourceViewResolver)
  
  import org.springframework.jdbc.datasource.DriverManagerDataSource;
  import org.springframework.jdbc.core.JdbcTemplate;
  
-->
<!-- 공통 DB작업  -->
<!-- 오라클 설정 -->
 <!-- <bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
 	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
 	<property name="username" value="team2" />
 	<property name="password" value="1004" />
 </bean>
 -->
 <bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
 	<property name="url" value="jdbc:mysql://username.cghkqk2zeb0q.ap-northeast-2.rds.amazonaws.com:3306/eesotto?
 				    allowMultiQueries=true&amp;useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true" />
 	<property name="username" value="username" />
 	<property name="password" value="password" />
 </bean>
 
 <bean id="" class="org.springframework.jdbc.core.JdbcTemplate">
 	<property name="dataSource" ref="driverManagerDataSource"></property>
 </bean>
 
 <!-- Mybatis 설정
기본 자바코드 : SqlMapConfig.xml 에서 설정했던 작업 (DB연결 ,mapper 설정)
파일 없어지고 설명파일안에서   > SqlSessionFactoryBean
기존 java 코드 : builder 사용 > Factory 객체 > sqlsession 생성 > 사용 

두개의 클래스가 위 작업 처리 
SqlSessionFactoryBean
SqlSessionTemplate
 -->
<bean id="sqlSessionFactoryBean"  class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="driverManagerDataSource"></property>
    <property name="mapperLocations" value="classpath*:mapper/*xml" />
</bean> 

<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  <constructor-arg index="0" ref="sqlSessionFactoryBean"/>
</bean>

<!-- 	Mapper Interface 마이바티스 주석 사용 설정 -->
	<mybatis-spring:scan base-package="bit.or.eesotto.dao"/> 
<!-- Mybatis 설정  -->
 
  <!-- 공통 UI  -->
  <!-- 파일 업로드지원 Resolver -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760"></property> <!-- 10M -->
  </bean>
  
   <!-- 암호화 -->
  <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
  
  <!-- 트랜젝션 매니저 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="driverManagerDataSource"></property>
	</bean>
	
	<!-- @Transactional 애노테이션을 sacn하기 위한 설정 -->
	<tx:annotation-driven/>
	<!-- Gmail 시작-->
	  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
	    <property name="host" value="smtp.gmail.com" />
	    <property name="port" value="587" />
	    <property name="username" value="2sotto.bit155@gmail.com" />
	    <property name="password" value="fckqtnbrqhzqpjdl" />
	    <property name="javaMailProperties">
		   <props>
		      <prop key="mail.smtp.auth">true</prop>
		      <prop key="mail.smtp.starttls.enable">true</prop>
		   </props>
	    </property>
	  </bean>
   <!-- 
    <props> 
    	<prop key="email.debug">true</prop> 
   		<prop key="email.smtp.auth">true</prop>
     	<prop key="email.smtp.starttls.enable">true</prop>
     	<prop key="email.mime.charset">utf-8</prop> 
     	<prop key="email.transport.protocol">smtp</prop> 
     </props>
    </property>
  </bean>
  -->
	<!-- Gmail 끝 -->
	

</beans>










