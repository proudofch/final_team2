<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/websocket 
 		http://www.springframework.org/schema/websocket/spring-websocket.xsd" >


	<!-- 웹소캣 추가사항 시작 -->
	<!--  
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	http://www.springframework.org/schema/websocket 
 	http://www.springframework.org/schema/websocket/spring-websocket.xsd 
	 -->
	<!-- 웹소캣 추가사항 끝 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/assets/**" location="/assets/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:annotation-config />
	<context:component-scan base-package="bit.or.eesotto" />
	
	<!-- <beans:bean name="jsonview" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />-->
	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="bit.or.eesotto.controller.NaverLoginBO" />
	
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<!-- 
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="235868660365-q3sv4tkavmc2jos6ub2qtejg1o5of2a3.apps.googleusercontent.com" />
		<beans:constructor-arg value="MqAeHeUS9PI1CjSPmGhoMXVE" />
	</beans:bean>
	-->
	 <!-- Google 소셜 로그인 연결 설정 시작 -->
    <beans:bean id="googleOAuth2Template"
        class="org.springframework.social.google.connect.GoogleOAuth2Template">
        <beans:constructor-arg
            value="235868660365-q3sv4tkavmc2jos6ub2qtejg1o5of2a3.apps.googleusercontent.com" />
        <beans:constructor-arg value="MqAeHeUS9PI1CjSPmGhoMXVE" />
    </beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		 
		 <!-- <beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" /> -->
		<beans:property name="scope" value="email" />
		 <beans:property name="redirectUri" value="http://localhost:8080/bit/login/oauth2callback.bit" />  <!-- callback을 동일하게 해준다. -->
	    <!-- 서비스계정을 추가해준다. -->
	     <!--  <beans:property name="redirectUri" value="http://localhost:8090/login_project2/oauth2callback" /> -->
	</beans:bean>
	<beans:bean id="authInfo" class="bit.or.eesotto.dto.AuthInfo">
        <beans:constructor-arg
            value="235868660365-q3sv4tkavmc2jos6ub2qtejg1o5of2a3.apps.googleusercontent.com" />
        <beans:constructor-arg value="MqAeHeUS9PI1CjSPmGhoMXVE" />
 
    </beans:bean>
    <!-- Google 소셜 로그인 연결 설정 끝 -->
    <!-- 페이스북 소셜 로그인 연결 설정 시작 -->
    <beans:bean id="connectionFactory"
        class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
        <beans:constructor-arg value="2685505378403600" />
        <beans:constructor-arg value="0e8da77ff5640ed2c01c7ceb97341edc" />
    </beans:bean>
 
    <beans:bean id="oAuth2Parameters"
        class="org.springframework.social.oauth2.OAuth2Parameters">
        <beans:property name="scope" value="email" />
        <beans:property name="redirectUri" value="http://localhost:8080/bit/login/facebookSignInCallback.bit" />
    </beans:bean>

    <!-- 페이스북 소셜 로그인 연결 설정 시작 -->
	
	<!-- 웹소켓 시작-->
	<websocket:handlers>
		<websocket:mapping path="/chat" handler="chatHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="bit.or.eesotto.interceptor.ChatHandShakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
	<websocket:handlers>
		<websocket:mapping path="/alarm" handler="alarmHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="bit.or.eesotto.interceptor.AlarmHandShakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>

	<beans:bean class="bit.or.eesotto.websocket.WebSocketChatHandler"
		id="chatHandler" />

	<beans:bean class="bit.or.eesotto.websocket.WebSocketAlarmHandler"
		id="alarmHandler" />
	<!-- 웹소켓 끝-->
	

	     
</beans:beans>
